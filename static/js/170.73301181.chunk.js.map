{"version":3,"file":"static/js/170.73301181.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  font-size: 24px;\n  font-weight: 500;\n\n  &:hover,\n  &:focus {\n    color: blueviolet;\n  }\n`;\n\nexport const MovieDetailsContainer = styled.div`\n  margin-left: 10px;\n  margin-bottom: 50px;\n`\n\nexport const MovieDetailsBtn  = styled.button`\n  color: black;\n  background-color: bisque;\n  margin-top: 20px;\n  margin-bottom: 10px;\n  border: none;\n  padding: 5px 10px;\n  font-size: 14 px;\n  border-radius: 10%;\n\n  &:hover {\n  color: bisque;\n  background-color: black;\n  }\n\n  &:focus {\n  color: bisque;\n  background-color: black;\n  }\n`\n\nexport const MovieDetailsCard  = styled.div`\n  margin-bottom: 20px;\n  padding: 10px 15px;\n  border: 1px solid black;\n  width: 300px;\n`\n\nexport const MovieDetailsImg  = styled.img`\n  margin-bottom: 20px;\n  width: 300px;\n`\n\nexport const MovieDetailsInfo  = styled.div`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  width: 100%;\n`\n\nexport const MovieDetailsTitle  = styled.h2`\n  text-transform: uppercase;\n`\n\nexport const MovieDetailsSubTitle  = styled.h3`\n  text-transform: uppercase;\n`\n\nexport const MovieDetailsText  = styled.p`\n  font-size: 18px;\n  max-width: 300px;\n\n  &:last-child {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 10px;\n  }\n`\n\nexport const MovieDetailsList  = styled.ul`\n  text-align: center;\n  display: flex;\n  border: 1px solid black;\n  width: 300px;\n  padding: 10px 15px;\n  flex-direction: column;\n  gap: 15px;\n  margin-bottom: 20px;\n`\n","import {\n  useParams,\n  Outlet,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getInfoMovieByID } from 'api/api';\nimport { Suspense, useEffect, useState, useRef } from 'react';\nimport notFoundImage from '../../images/notFoundImage/image-not-found-4a963b95bf081c3ea02923dceaeb3f8085e1a654fc54840aac61a57a60903fef.png';\nimport { StyledLink, MovieDetailsContainer, MovieDetailsBtn, MovieDetailsCard, MovieDetailsImg, MovieDetailsInfo, MovieDetailsTitle, MovieDetailsSubTitle, MovieDetailsText, MovieDetailsList } from './MovieDetails.styled';\n\n\n\nfunction MovieDetails() {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const locationRef = useRef(location);\n\n  useEffect(() => {\n    setStatus('pending');\n    getInfoMovieByID(movieId)\n      .then(res => {\n        setStatus('resolved');\n        setMovieInfo(res);\n      })\n      .catch(error => {\n        console.log(error.message);\n        setStatus('rejected');\n      });\n  }, [movieId]);\n\n  const onBackClick = () => {\n    navigate(locationRef.current.state?.from ?? '/', { replace: true });\n  };\n\n  return (\n    <MovieDetailsContainer>\n      <MovieDetailsBtn\n        type=\"button\"\n        onClick={onBackClick}\n      >\n        Go back\n      </MovieDetailsBtn>\n      {status === 'resolved' && (\n        <>\n          {' '}\n          <MovieDetailsCard>\n            <MovieDetailsImg\n              alt={\n                movieInfo.title || movieInfo.original_title || 'movie poster'\n              }\n              src={\n                movieInfo.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movieInfo.poster_path}`\n                  : `${notFoundImage}`\n              }\n            />\n            <MovieDetailsInfo>\n              <MovieDetailsTitle>\n                {movieInfo.title || movieInfo.original_title}\n              </MovieDetailsTitle>\n              <MovieDetailsText>\n                {movieInfo.vote_average.toFixed(1)}\n              </MovieDetailsText>\n              <MovieDetailsSubTitle>Overview</MovieDetailsSubTitle>\n              <MovieDetailsText>{movieInfo.overview}</MovieDetailsText>\n              <MovieDetailsSubTitle>Genres</MovieDetailsSubTitle>\n              <p>\n                {movieInfo.genres.length !== 0 &&\n                  movieInfo.genres.map(({ name, id }) => (\n                    <span key={id}>{name}</span>\n                  ))}\n              </p>\n            </MovieDetailsInfo>\n          </MovieDetailsCard>\n          <MovieDetailsList>\n            <li>\n              <StyledLink to={`cast`}>Cast</StyledLink>\n            </li>\n            <li>\n              <StyledLink to={`reviews`}>Reviews</StyledLink>\n            </li>\n          </MovieDetailsList>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n      {status === 'pending' && <p>Loading...</p>}\n      {status === 'rejected' && (\n        <p>Sorry, we don't find any info about this movie.</p>\n      )}\n    </MovieDetailsContainer>\n  );\n}\n\nStyledLink.propTypes = {\n  to: PropTypes.string.isRequired,\n};\n\nexport default MovieDetails;\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","MovieDetailsContainer","_templateObject2","MovieDetailsBtn","_templateObject3","MovieDetailsCard","_templateObject4","MovieDetailsImg","_templateObject5","MovieDetailsInfo","_templateObject6","MovieDetailsTitle","_templateObject7","MovieDetailsSubTitle","_templateObject8","MovieDetailsText","_templateObject9","MovieDetailsList","_templateObject10","propTypes","to","PropTypes","_useState","useState","_useState2","_slicedToArray","movieInfo","setMovieInfo","_useState3","_useState4","status","setStatus","movieId","useParams","navigate","useNavigate","location","useLocation","locationRef","useRef","useEffect","getInfoMovieByID","then","res","catch","error","console","log","message","_jsxs","children","_jsx","type","onClick","_locationRef$current$","_locationRef$current$2","current","state","from","replace","_Fragment","alt","title","original_title","src","poster_path","concat","notFoundImage","vote_average","toFixed","overview","genres","length","map","_ref","name","id","Suspense","fallback","Outlet"],"sourceRoot":""}