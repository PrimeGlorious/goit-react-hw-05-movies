{"version":3,"file":"static/js/736.8c87af82.chunk.js","mappings":"8PAEaA,EAAWC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qEAKpBC,EAAWH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qEAKpBG,EAAWL,EAAAA,GAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,qEAKnBK,EAAUP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,0F,SCiCjC,MA5CA,WACE,IAAAO,GAAkCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAA4BL,EAAAA,EAAAA,UAAS,QAAOM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAChBG,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAjBAE,EAAAA,EAAAA,YAAU,WACRH,EAAU,YACVI,EAAAA,EAAAA,IAAiBH,GACdI,MAAK,SAAAC,GACJ,GAAwB,IAApBA,EAAIC,KAAKC,OAIX,MAAM,IAAIC,MAAM,2BAHhBb,EAAaU,EAAIC,MACjBP,EAAU,WAId,IACCU,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,SAClBd,EAAU,WACZ,GACJ,GAAG,CAACC,KAGFc,EAAAA,EAAAA,MAAClC,EAAQ,CAAAmC,SAAA,CACK,aAAXjB,GACCJ,EAAUsB,KAAI,SAAAC,GAAA,IAAGC,EAAID,EAAJC,KAAMC,EAASF,EAATE,UAAWC,EAAYH,EAAZG,aAAcC,EAAEJ,EAAFI,GAAE,OAChDP,EAAAA,EAAAA,MAAC9B,EAAQ,CAAA+B,SAAA,EACPO,EAAAA,EAAAA,KAAClC,EAAO,CACNmC,IACEH,EAAY,kCAAAI,OAC0BJ,GAAY,GAAAI,OAC3CC,GAETC,IAAKR,KAEPJ,EAAAA,EAAAA,MAAC5B,EAAQ,CAAA6B,SAAA,CAAC,SAAOG,MACjBJ,EAAAA,EAAAA,MAAC5B,EAAQ,CAAA6B,SAAA,CAAC,cAAYI,OAVTE,EAWJ,IAEH,YAAXvB,IAAwBwB,EAAAA,EAAAA,KAACpC,EAAQ,CAAA6B,SAAC,eACvB,aAAXjB,IAAyBwB,EAAAA,EAAAA,KAACpC,EAAQ,CAAA6B,SAAC,oCAG1C,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`\nexport const CastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`\nexport const CastText = styled.p`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`\nexport const CastImg = styled.img`\n  max-width: 600px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport notFoundImage from '../../images/notFoundImage/image-not-found-4a963b95bf081c3ea02923dceaeb3f8085e1a654fc54840aac61a57a60903fef.png';\nimport { getCastMovieByID } from 'api/api';\nimport { CastList, CastItem, CastText, CastImg } from './Cast.styled';\n\nfunction Cast() {\n  const [movieCast, setMovieCast] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const { movieId } = useParams();\n  useEffect(() => {\n    setStatus('pending');\n    getCastMovieByID(movieId)\n      .then(res => {\n        if (res.cast.length !== 0) {\n          setMovieCast(res.cast);\n          setStatus('resolved');\n        } else {\n          throw new Error('we dont find any casts ');\n        }\n      })\n      .catch(error => {\n        console.log(error.message);\n        setStatus('rejected');\n      });\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {status === 'resolved' &&\n        movieCast.map(({ name, character, profile_path, id }) => (\n          <CastItem key={id}>\n            <CastImg\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : `${notFoundImage}`\n              }\n              alt={name}\n            />\n            <CastText>Name: {name}</CastText>\n            <CastText>Character: {character}</CastText>\n          </CastItem>\n        ))}\n      {status === 'pending' && <CastText>Loading...</CastText>}\n      {status === 'rejected' && <CastText>Sorry, we dont find any casts</CastText>}\n    </CastList>\n  );\n}\n\nexport default Cast;\n"],"names":["CastList","styled","_templateObject","_taggedTemplateLiteral","CastItem","_templateObject2","CastText","_templateObject3","CastImg","_templateObject4","_useState","useState","_useState2","_slicedToArray","movieCast","setMovieCast","_useState3","_useState4","status","setStatus","movieId","useParams","useEffect","getCastMovieByID","then","res","cast","length","Error","catch","error","console","log","message","_jsxs","children","map","_ref","name","character","profile_path","id","_jsx","src","concat","notFoundImage","alt"],"sourceRoot":""}